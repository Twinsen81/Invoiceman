version: 2

references:

  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build
        - domain/build

  defaults: &defaults
    working_directory: *workspace
    docker:
    - image: circleci/android:api-28-alpha
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m

jobs:
  build_debug:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
        command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Gradle build (debug)
        command: ./gradlew -PciBuild=true :domain:assemble assembleDebug assembleAndroidTest
    - *persist_debug_workspace

  test_unit:
    <<: *defaults
    steps:
    - run:
        name: Run unit tests
        command: ./gradlew -PciBuild=true :domain:test testDebugUnitTest
    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
        when: always
    - store_test_results:
        path: ~/test-results
    - store_artifacts:
        path: ~/test-results/junit

workflows:
  version: 2
  workflow:
    jobs:
    - build_debug
    - test_unit